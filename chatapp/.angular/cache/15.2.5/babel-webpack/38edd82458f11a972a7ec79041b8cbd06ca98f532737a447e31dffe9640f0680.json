{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router // Injete o serviço Router\n  ) {\n    this.authService = authService;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = null;\n  }\n  login() {\n    this.authService.login(this.username, this.password).subscribe(response => {\n      console.log('Login bem-sucedido', response);\n      // Armazenar o token JWT no localStorage\n      localStorage.setItem('authToken', response.token);\n      // Redirecionar para a página de chat ou outra rota protegida\n      this.router.navigate(['/chat']);\n    }, error => {\n      console.error('Erro no login', error);\n      this.errorMessage = 'Usuário ou senha inválidos'; // Mostrar mensagem de erro na interface do usuário\n    });\n  }\n\n  goToRegister() {\n    this.router.navigate(['/register']);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YACUC,WAAwB,EACxBC,MAAc,CAAC;EAAA;IADf,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;IANhB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;IACrB,iBAAY,GAAkB,IAAI;EAK/B;EAEHC,KAAK;IACH,IAAI,CAACF,WAAW,CAACE,KAAK,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAC3DC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC3C;MACAG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,QAAQ,CAACK,KAAK,CAAC;MACjD;MACA,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACAC,KAAK,IAAI;MACRN,OAAO,CAACM,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,IAAI,CAACC,YAAY,GAAG,4BAA4B,CAAC,CAAC;IACpD,CAAC,CACF;EACH;;EAEAC,YAAY;IACV,IAAI,CAACd,MAAM,CAACW,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;CACD;AA7BYd,cAAc,eAL1BD,SAAS,CAAC;EACTmB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWpB,cAAc,CA6B1B;SA7BYA,cAAc","names":["Component","LoginComponent","constructor","authService","router","login","username","password","subscribe","response","console","log","localStorage","setItem","token","navigate","error","errorMessage","goToRegister","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/doug/Área de Trabalho/process/chatapp/src/app/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router'; // Importe o serviço Router\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  errorMessage: string | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router // Injete o serviço Router\n  ) {}\n\n  login() {\n    this.authService.login(this.username, this.password).subscribe(\n      (response: any) => {\n        console.log('Login bem-sucedido', response);\n        // Armazenar o token JWT no localStorage\n        localStorage.setItem('authToken', response.token);\n        // Redirecionar para a página de chat ou outra rota protegida\n        this.router.navigate(['/chat']);\n      },\n      (error) => {\n        console.error('Erro no login', error);\n        this.errorMessage = 'Usuário ou senha inválidos'; // Mostrar mensagem de erro na interface do usuário\n      }\n    );\n  }\n\n  goToRegister() {\n    this.router.navigate(['/register']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}