{"ast":null,"code":"import io from 'socket.io-client';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r1, \" \");\n  }\n}\nexport class ChatComponent {\n  constructor(router) {\n    this.router = router;\n    this.messages = [];\n    this.messageText = '';\n    this.message = '';\n  }\n  ngOnInit() {\n    this.socket = io('http://localhost:3000');\n    this.socket.on('message', message => {\n      this.messages.push(message);\n    });\n  }\n  ngOnDestroy() {\n    this.socket.disconnect();\n  }\n  sendMessage() {\n    const username = localStorage.getItem('username');\n    console.log(username);\n    if (this.message.trim() !== '') {\n      this.socket.emit('message', {\n        text: this.message,\n        username\n      });\n      this.message = '';\n    }\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"submit\"], [\"type\", \"text\", \"placeholder\", \"Type your message\", \"name\", \"chat\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ChatComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function ChatComponent_Template_form_submit_1_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.messageText = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵtext(4, \"Send\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.messageText);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,OAAOA,EAAE,MAAM,kBAAkB;;;;;;;ICFjCC,2BAAsC;IAClCA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,2CACF;;;ADOF,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAJ1B,aAAQ,GAAa,EAAE;IACvB,gBAAW,GAAG,EAAE;IAChB,YAAO,GAAW,EAAE;EAEiB;EAErCC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAGN,EAAE,CAAC,uBAAuB,CAAC;IAEzC,IAAI,CAACM,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGC,OAAe,IAAI;MAC5C,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,OAAO,CAAC;IAC7B,CAAC,CAAC;EACJ;EAEAG,WAAW;IACT,IAAI,CAACL,MAAM,CAACM,UAAU,EAAE;EAC1B;EAEAC,WAAW;IACT,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,IAAI,IAAI,CAACN,OAAO,CAACW,IAAI,EAAE,KAAK,EAAE,EAAE;MAC9B,IAAI,CAACb,MAAM,CAACc,IAAI,CAAC,SAAS,EAAE;QAAEC,IAAI,EAAE,IAAI,CAACb,OAAO;QAAEM;MAAQ,CAAE,CAAC;MAC7D,IAAI,CAACN,OAAO,GAAG,EAAE;;EAErB;;AA3BWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT1BzB,8DAEQ;MAENA,+BAA+B;MAAzBA;QAAA,OAAU0B,iBAAa;MAAA,EAAC;MAC5B1B,gCAA0F;MAAvEA;QAAA;MAAA,EAAyB;MAA5CA,iBAA0F;MAC1FA,iCAAsB;MAAAA,oBAAI;MAAAA,iBAAS;;;MANdA,sCAAW;MAKbA,eAAyB;MAAzBA,yCAAyB","names":["io","i0","ChatComponent","constructor","router","ngOnInit","socket","on","message","messages","push","ngOnDestroy","disconnect","sendMessage","username","localStorage","getItem","console","log","trim","emit","text","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/doug/Área de Trabalho/process/chatapp/src/app/chat/chat.component.ts","/home/doug/Área de Trabalho/process/chatapp/src/app/chat/chat.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport io from 'socket.io-client';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css'],\n})\nexport class ChatComponent implements OnInit, OnDestroy {\n  private socket: any;\n  messages: string[] = [];\n  messageText = '';\n  message: string = '';\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.socket = io('http://localhost:3000');\n\n    this.socket.on('message', (message: string) => {\n      this.messages.push(message);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.socket.disconnect();\n  }\n\n  sendMessage() {\n    const username = localStorage.getItem('username');\n    console.log(username)\n    if (this.message.trim() !== '') {\n      this.socket.emit('message', { text: this.message, username });\n      this.message = '';\n    }\n  }\n}\n","<div *ngFor=\"let message of messages\">\n    {{ message }}\n  </div>\n  \n  <form (submit)=\"sendMessage()\">\n    <input type=\"text\" [(ngModel)]=\"messageText\" placeholder=\"Type your message\" name=\"chat\"/>\n    <button type=\"submit\">Send</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}