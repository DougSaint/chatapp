{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n    this.token = null;\n  }\n  register(username, password) {\n    return this.http.post(`${this.apiUrl}/register`, {\n      username,\n      password\n    });\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      username,\n      password\n    }).toPromise().then(response => {\n      this.setToken(response.token);\n    });\n  }\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem('auth_token', token);\n  }\n  getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('auth_token');\n    }\n    return this.token;\n  }\n  clearToken() {\n    this.token = null;\n    localStorage.removeItem('auth_token');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,uBAAuB;IAChC,UAAK,GAAkB,IAAI;EAEI;EAEvCC,QAAQ,CAACC,QAAgB,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,WAAW,EAAE;MAAEH,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EAC1E;EAEAG,KAAK,CAACJ,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAoB,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAE;MAAEH,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAACI,SAAS,EAAE,CACjGC,IAAI,CAACC,QAAQ,IAAG;MACf,IAAI,CAACC,QAAQ,CAACD,QAAQ,CAACE,KAAK,CAAC;IAC/B,CAAC,CAAC;EACN;EAEAD,QAAQ,CAACC,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,KAAK,CAAC;EAC3C;EAEAG,QAAQ;IACN,IAAI,CAAC,IAAI,CAACH,KAAK,EAAE;MACf,IAAI,CAACA,KAAK,GAAGC,YAAY,CAACG,OAAO,CAAC,YAAY,CAAC;;IAGjD,OAAO,IAAI,CAACJ,KAAK;EACnB;EAEAK,UAAU;IACR,IAAI,CAACL,KAAK,GAAG,IAAI;IACjBC,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;EACvC;;AAjCWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["AuthService","constructor","http","register","username","password","post","apiUrl","login","toPromise","then","response","setToken","token","localStorage","setItem","getToken","getItem","clearToken","removeItem","factory","providedIn"],"sourceRoot":"","sources":["/home/doug/Área de Trabalho/process/chatapp/src/app/auth.guard.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:3000';\n  private token: string | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  register(username: string, password: string) {\n    return this.http.post(`${this.apiUrl}/register`, { username, password });\n  }\n\n  login(username: string, password: string) {\n    return this.http.post<{ token: string }>(`${this.apiUrl}/login`, { username, password }).toPromise()\n      .then(response => {\n        this.setToken(response.token);\n      });\n  }\n\n  setToken(token: string) {\n    this.token = token;\n    localStorage.setItem('auth_token', token);\n  }\n\n  getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('auth_token');\n    }\n\n    return this.token;\n  }\n\n  clearToken() {\n    this.token = null;\n    localStorage.removeItem('auth_token');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}