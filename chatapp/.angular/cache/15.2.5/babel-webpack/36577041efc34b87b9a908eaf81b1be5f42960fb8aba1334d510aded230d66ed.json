{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // O usuário está autenticado\n      return true;\n    } else {\n      // O usuário não está autenticado, redirecionar para a página de login\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT;MACA,OAAO,IAAI;KACZ,MAAM;MACL;MACA,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAbWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","token","localStorage","getItem","navigate","factory","providedIn"],"sourceRoot":"","sources":["/home/doug/Área de Trabalho/process/chatapp/src/app/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // O usuário está autenticado\n      return true;\n    } else {\n      // O usuário não está autenticado, redirecionar para a página de login\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}